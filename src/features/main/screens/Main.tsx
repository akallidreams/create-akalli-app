import {
  Bold,
  Center,
  View,
  Text,
  If,
  Italic,
  For,
  HCenter,
  InputLength,
  ButtonIcon,
  Button,
} from "@akalli/components";
import { AkIcons } from "@akalli/icons";
import { useAppDispatch } from "@config/store";
import { useEffect } from "react";
import { useForm } from "react-hook-form";
import { useSelector } from "react-redux";
import { authSlice } from "../../auth/helpers/redux";

export const Main = () => {
  const dispatch = useAppDispatch();
  const isLoggedIn = useSelector((state: any) => state.auth.isLoggedIn);
  const {
    control,
    handleSubmit,
    formState: { errors },
  } = useForm();

  useEffect((): void => {
    dispatch(authSlice.actions.login());
  }, []);

  return (
    <Center height="100%">
      <Bold>Welcome to Create akalli app</Bold>
      <View
        my="20px"
        _condition={isLoggedIn}
        _else={() => <Text>Not Logged</Text>}
      >
        <Text testID="dti-title" fontSize="lg">
          Logged in
        </Text>
      </View>
      <If _condition={isLoggedIn}>
        <Italic>I am a more descriptive conditional option</Italic>
      </If>
      <HCenter flewGrowth="0" maxHeight="100px" mt="20px">
        <For
          _list={[1, 2, 3]}
          renderItem={({ item }) => {
            return <Text>{item} I am a flatlist with autogenerated keys</Text>;
          }}
        />
      </HCenter>
      <InputLength
        _control={control}
        _errors={errors}
        _schema={{
          label: "An input with a minLength validation",
          minLength: 5,
          minLengthMessage: "Min length is 5",
          requiredMessage: "Required field",
          color: "success",
          width: "220px",
        }}
        mb="20px"
      />
      <Button
        bg="transparent"
        borderColor="primary"
        borderWidth={1}
        onPress={handleSubmit(() => {
          console.log("submit");
        })}
      >
        <Text color="primary">I am a button</Text>
      </Button>
    </Center>
  );
};
